---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: moduledeployments.koupleless.io
spec:
  group: koupleless.io
  names:
    kind: ModuleDeployment
    listKind: ModuleDeploymentList
    plural: moduledeployments
    shortNames:
    - mddeploy
    singular: moduledeployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModuleDeployment is the Schema for the moduledeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ModuleDeploymentSpec defines the desired state of ModuleDeployment
            properties:
              baseDeploymentName:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                type: string
              confirmBatchNum:
                default: 0
                format: int32
                minimum: 0
                type: integer
              minReadySeconds:
                format: int32
                type: integer
              operationStrategy:
                properties:
                  batchCount:
                    format: int32
                    type: integer
                  grayTimeBetweenBatchSeconds:
                    format: int32
                    type: integer
                  maxUnavailable:
                    format: int32
                    type: integer
                  needConfirm:
                    type: boolean
                  serviceStrategy:
                    properties:
                      enableModuleService:
                        type: boolean
                      port:
                        format: int32
                        type: integer
                      targetPort:
                        anyOf:
                        - type: integer
                        - type: string
                        x-kubernetes-int-or-string: true
                    type: object
                  upgradePolicy:
                    type: string
                  useBeta:
                    type: boolean
                type: object
              progressDeadlineSeconds:
                format: int32
                type: integer
              replicas:
                format: int32
                minimum: -1
                type: integer
              revisionHistoryLimit:
                format: int32
                type: integer
              schedulingStrategy:
                properties:
                  schedulingPolicy:
                    default: scatter
                    enum:
                    - scatter
                    - stacking
                    type: string
                type: object
              template:
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    type: object
                  spec:
                    description: Specification of the desired behavior of the module
                    properties:
                      module:
                        properties:
                          md5:
                            type: string
                          name:
                            minLength: 1
                            type: string
                          type:
                            type: string
                          url:
                            format: uri
                            type: string
                          version:
                            minLength: 1
                            type: string
                        required:
                        - name
                        - url
                        - version
                        type: object
                      selector:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      upgradePolicy:
                        type: string
                    required:
                    - module
                    type: object
                type: object
            required:
            - baseDeploymentName
            type: object
          status:
            description: ModuleDeploymentStatus defines the observed state of ModuleDeployment
            properties:
              availableReplicas:
                format: int32
                type: integer
              collisionCount:
                format: int32
                type: integer
              conditions:
                items:
                  properties:
                    last_transition_time:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of in place set condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                format: int64
                type: integer
              readyReplicas:
                format: int32
                type: integer
              releaseStatus:
                properties:
                  batchProgress:
                    description: the phase current batch release reach
                    type: string
                  currentBatch:
                    description: Records the current batch serial number.
                    format: int32
                    type: integer
                  lastTransitionTime:
                    description: Last time the release transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  nextReconcileTime:
                    format: date-time
                    type: string
                  originalDeltaReplicas:
                    description: Records the original delta replicas
                    format: int32
                    type: integer
                  progress:
                    description: The phase current whole release reach
                    type: string
                  realBatchCount:
                    description: Records the real batch count
                    format: int32
                    type: integer
                  updateRevision:
                    description: Records the latest revision.
                    type: string
                type: object
              replicas:
                format: int32
                type: integer
              unavailableReplicas:
                format: int32
                type: integer
              updatedAvailableReplicas:
                format: int32
                type: integer
              updatedReadyReplicas:
                format: int32
                type: integer
              updatedReplicas:
                format: int32
                type: integer
              upgradingReplicas:
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
