name: Module Controller Release
run-name: ${{ github.actor }} pushed module-controller code

on:
  create:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  CGO_ENABLED: 0
  GO_VERSION: 1.21.3
  GOOS: linux
  WORK_DIR: module-controller
  DOCKERHUB_REGISTRY: serverless-registry.cn-shanghai.cr.aliyuncs.com
  MODULE_CONTROLLER_IMAGE_PATH: opensource/release/module-controller

defaults:
  run:
    working-directory: module-controller

jobs:
  build-push-linux-amd64-image:
    name: "Build and push module-controller Docker images"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKERHUB_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Get the version
        id: get_version
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo ::set-output name=VERSION::latest
          else
            echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}
          fi
      - name: Build and push module-controller Docker images
        uses: docker/build-push-action@v4.1.1
        with:
          context: ${{ env.WORK_DIR }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          file: ${{ env.WORK_DIR }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le
          push: true
          tags: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.MODULE_CONTROLLER_IMAGE_PATH }}:${{ steps.get_version.outputs.VERSION }}
